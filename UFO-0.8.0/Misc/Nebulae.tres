[gd_resource type="ShaderMaterial" load_steps=8 format=2]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;
render_mode blend_mix, unshaded;

uniform float offset = 0.0;

uniform float distort = 0.03;
uniform float scale = 1.0;
uniform float falloff = 1.0;

uniform sampler2D color_map;
uniform sampler2D color_function;

uniform sampler2D density_map;
uniform float density = 0.0;

float noise(vec2 p) {
	vec2 distortion = vec2(0);
	distortion.x = texture(density_map, p).r * 2.0 - 1.0;
	distortion.y = texture(density_map, p + distortion).r * 2.0 - 1.0;
	return texture(density_map, p + distortion * distort).r;
}

void fragment() {
	float n = noise(UV * scale + vec2(offset, 0));
	n = pow(n + density, falloff);
	
	vec3 color = 1.5 * texture(color_function, vec2(texture(color_map, UV * scale).r, 0)).rgb;
	
	COLOR = vec4(color, n);
}"

[sub_resource type="Gradient" id=2]
offsets = PoolRealArray( 0, 0.461905, 0.842857 )
colors = PoolColorArray( 1, 0.996834, 0.189453, 1, 1, 0.417969, 0.895416, 1, 0.835991, 1, 0.494141, 1 )

[sub_resource type="GradientTexture" id=3]
gradient = SubResource( 2 )

[sub_resource type="OpenSimplexNoise" id=4]
seed = 356450670
octaves = 2

[sub_resource type="NoiseTexture" id=5]
seamless = true
noise = SubResource( 4 )

[sub_resource type="OpenSimplexNoise" id=6]
seed = -1336406571

[sub_resource type="NoiseTexture" id=7]
seamless = true
noise = SubResource( 6 )

[resource]
shader = SubResource( 1 )
shader_param/offset = -0.129605
shader_param/distort = -0.02
shader_param/scale = 0.14
shader_param/falloff = 5.04
shader_param/density = 0.19
shader_param/color_map = SubResource( 5 )
shader_param/color_function = SubResource( 3 )
shader_param/density_map = SubResource( 7 )

